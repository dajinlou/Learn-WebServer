1. 忽略管道信号有什么用？
     这段代码的目的是忽略SIGPIPE信号。当某个进程向一个没有读取端的管端（pipe）写入
数据时，通常会收到SIGPIPE信号。默认情况下，这个信号会终止进程，但这个函数的
函数体通过将其处理方式设置为忽略，使得进程在发生这种情况时不会终止。

2. 如何具体处理超时定时器？
    通过使用小根堆数据结构，每次推出已过期的定时器，


3. 超时之后，只是简单的移除定时器吗？还做哪些工作？
    我们知道TinyWebServer是基于升序链表定时器结构，超时之后，1）删除定时器 2）将当前文件描述符从树上摘下

4. RequestData和MyTimer的关系是你中有我，我中有你？？？
    它没有调用MyTimer中的Update更新过期事件，而是通过先分离定时器，让分离后的定时器自动过期，然后在处理请求中添加新的定时器

    经过我研究发现，当分离后，会为请求添加新的定时器，并加入队列中，这个定时器中保存有RequestData指针，一旦定时器释放，就会
调用RequestData释放内存，一旦RequestData释放内存，在RequestData析构函数中，会close(fd)。

5. 定时器过期，仅仅是出队这个操作吗？
    具体看回答4

6. 我发现RequestData中为什么要有MyTimer对象，有什么用呢？
    用于控制小根堆保存的定时器，小根堆添加的定时器和RequestData中的定时器对象是同一个定时器对象，所以RequestData保存一份，用于
更新优先队列中定时器的过期时间。

7. 线程池的使用
    线程池和任务队列写一起了，任务队列存储的是RequestData, 线程池中线程池执行的任务是MyHandler函数.

8. 线程池销魂有问题，线程是不是并不能完全销毁?
    回复：可以销毁，不知道为什么会多显示一个线程，当线程池关闭时，显示进程中还有2个线程
    ps -aux | grep server 查看进程编号
    ps -T -p PID  查看当前进程有几个线程

存在问题：
（1）定时器存在问题，当接收客户端的请求时，它就进行请求和定时器分离，然后定时器就没再更新过，这样的话岂不是变成了先进先出了。
    已解决---》具体看回答4

（2） 线程池存在问题，有点混乱，逻辑不清晰，线程池既干任务队列的活又干线程池的活，不纯粹。
    改进地方：单独写一个任务队列对象，用于添加和删除对象；工作线程处理方式继续保留，关于处理请求放到RequestData中；还有封装的结构体
    可以使用模板代替。
